version: '3.7'

services:
  redis:
    container_name: blink-redis-${NODE_ENV}
    image: redis
    restart: always
    volumes:
      - ../../database/redis:/data
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:6379

  postgres:
    container_name: blink-postgres-${NODE_ENV}
    image: 'postgres:14.2'
    restart: always
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ../../database/postgres/postgres-${NODE_ENV}:/var/lib/postgresql/data
    healthcheck:
      test: exit 0

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.12
    container_name: redpanda
    command:
      - redpanda start
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  debezium:
    image: debezium/connect:2.4
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: redpanda:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
    depends_on: [postgres, redpanda]
    ports:
      - 8083:8083

# ref: https://docs.redpanda.com/redpanda-labs/docker-compose/cdc-postgres-json/