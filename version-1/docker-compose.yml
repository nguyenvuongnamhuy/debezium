version: '3.7'

services:
  # redis:
  #   container_name: blink-redis-${NODE_ENV}
  #   image: redis
  #   restart: always
  #   volumes:
  #     - ../../database/redis:/data
  #   env_file:
  #     - .env
  #   ports:
  #     - ${REDIS_PORT}:6379

  # postgres-db:
  #   platform: linux/x86_64
  #   container_name: blink-postgres-${NODE_ENV}
  #   image: 'postgres:14.2'
  #   restart: always
  #   env_file:
  #     - .env
  #   ports:
  #     - ${POSTGRES_PORT}:5432
  #   volumes:
  #     - ../../database/postgres/postgres-${NODE_ENV}:/var/lib/postgresql/data
  #   healthcheck:
  #     test: exit 0

  postgres-db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: 123456
    ports:
      - 5432:5432
    volumes:
      - ./newblink-data/postgres:/var/lib/postgresql/data

  zookeeper:
    platform: linux/x86_64
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    platform: linux/x86_64
    image: 'docker.io/bitnami/kafka:2-debian-10'
    container_name: kafka
    restart: unless-stopped
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=q0k00yjQRaqWmAAAZv955w # base64 UUID
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  kafka-admin:
    image: 'docker.redpanda.com/vectorized/console:latest'
    container_name: redpanda
    restart: unless-stopped
    ports:
      - 8082:8080
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - zookeeper
      - kafka

  debezium:
    image: debezium/connect:2.4
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
    depends_on:
      - postgres-db
      - kafka
    ports:
      - 8083:8083